% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_abs_api.R
\name{read_abs_api}
\alias{read_abs_api}
\title{Get tidy data from ABS}
\usage{
read_abs_api(query_url, raw = FALSE, structure_url = NULL)
}
\arguments{
\item{query_url}{(character) the}

\item{raw}{(logical; default = \code{FALSE})}

\item{structure_url}{(character; default = \code{NULL})}
}
\value{
(tibble) Returns a tidy \code{tibble} containing the ABS data you queried.
}
\description{
This function returns a tidy tibble of flat-view and JSON format data queried
using the ABS' API URL. It first identifies whether the URL entered uses the
ABS' old or new API URL structure. If the URL is super long, it's also passed
through the \code{api_split_url} function, which splits up the large URL into
a combination of smaller URLs to increase efficiency. The resulting URL/s
is/are then passed through \code{tidy_api_data}, which returns a tidy tibble
of your data.
}
\examples{
\dontrun{
### Get tidy dataset from a large URL (4087+ characters):
# First copy the URL
url <- abs_clipboard()
tidy_data <- read_abs_api(url)

### Get tidy ALC dataset using the ABS.Stat structure:
old_url <- paste0("http://stat.data.abs.gov.au/sdmx-json/data/ALC/",
 "all/ABS?startTime=2010&endTime=2016&detail=DataOnly",
  "&dimensionAtObservation=AllDimensions")
tidy_data <- read_abs_api(old_url)
tidy_data
}
}
